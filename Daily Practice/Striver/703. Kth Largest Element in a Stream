class KthLargest {
    private Queue<Integer> pq;
    private int k;
    public KthLargest(int k, int[] nums) {
        pq = new PriorityQueue<>();
        this.k = k;
        for (int x : nums) {
            pq.offer(x);
            if (pq.size() > k) {
                pq.poll();
            }
        }
    }
    
    public int add(int val) {
        pq.offer(val);
        if (pq.size() > k) pq.poll();
        return pq.peek();
    }
}


// class KthLargest {
//   private PriorityQueue<Integer> heap = new PriorityQueue<>();
//   private int k;

//   public KthLargest(int k, int[] nums) {
//     this.k = k;
//     for (var n : nums) add(n);
//   }
  
//   public int add(int val) {
//     heap.offer(val);
//     if (heap.size() > k) heap.poll();
//     return heap.peek();
//   }
// }

/**
 * Your KthLargest object will be instantiated and called as such:
 * KthLargest obj = new KthLargest(k, nums);
 * int param_1 = obj.add(val);
 */
