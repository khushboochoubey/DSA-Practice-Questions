/*
	
	Following the structure used for Binary Tree
	
	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */
class Solution {

    public List<Integer> preorderTraversal(TreeNode root) {

        Stack<TreeNode> st = new Stack<>();

        List<Integer> ans = new ArrayList<>();

        if(root==null){

            return ans;

        }

        st.push(root);

        while(st.size()>0){

            TreeNode node = st.pop();

            ans.add(node.val);

            if(node.right!=null){

                st.push(node.right);

            }

            if(node.left!=null){

                st.push(node.left);

            }

        }

        return ans;

    }

}
