import java.util.ArrayList;
import java.util.List;

public class Solution {
    public static List<List<Integer>> getTreeTraversal(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        
        List<Integer> inOrder = new ArrayList<>();
        List<Integer> preOrder = new ArrayList<>();
        List<Integer> postOrder = new ArrayList<>();
        
        inOrderTraversal(root, inOrder);
        preOrderTraversal(root, preOrder);
        postOrderTraversal(root, postOrder);
        
        ans.add(inOrder);
        ans.add(preOrder);
        ans.add(postOrder);
        
        return ans;
    }

    private static void inOrderTraversal(TreeNode root, List<Integer> result) {
        if (root == null) {
            return;
        }

        inOrderTraversal(root.left, result);
        result.add(root.data);
        inOrderTraversal(root.right, result);
    }

    private static void preOrderTraversal(TreeNode root, List<Integer> result) {
        if (root == null) {
            return;
        }

        result.add(root.data);
        preOrderTraversal(root.left, result);
        preOrderTraversal(root.right, result);
    }

    private static void postOrderTraversal(TreeNode root, List<Integer> result) {
        if (root == null) {
            return;
        }

        postOrderTraversal(root.left, result);
        postOrderTraversal(root.right, result);
        result.add(root.data);
    }
}
