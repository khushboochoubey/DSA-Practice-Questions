//0ms
//TC: O(n)
class Solution {
    public int maxScore(int[] cardPoints, int k) {
        int totalSum=0;
        for(int i=0;i<k;i++)//calculating the sum of left most k emelemts
			totalSum+=cardPoints[i];
        
        if(k==cardPoints.length)//if there are only k elements in our array
            return totalSum;
        
        int max=totalSum;
        for(int i=k-1,j=cardPoints.length-1;i>=0;i--,j--){ // using two pointers
//i -> starting from right most element of 1st k elements and going till 0th element
//j -> starting from rightmost element of the given array and going till kth element from the end

            totalSum += cardPoints[j] - cardPoints[i];// removing the ith element and adding our jth element
            max = Math.max(max,totalSum);// finding the max at each point
        }
        return max;// returning the final maximum
    }
}
