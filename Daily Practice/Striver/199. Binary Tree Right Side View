/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
      List<Integer>list = new ArrayList();
      leftView(root , list , 0);  
      return list;
    }

    public void leftView(TreeNode root , List<Integer> list , int depth){
        if(root == null) return;

        if(depth == list.size())
        list.add(root.val);

        leftView(root.right , list , depth + 1);
        leftView(root.left , list , depth + 1);
    }
}
