class Solution
{
    private Node dfs(int arr1[],int arr2[],int s1,int e1,int s2,int e2){
        
        Node node= new Node(arr1[s1]);
        int m1,m2,c1,c2;
        
        if(s1+1>e1){
            return node;
        }
        
        c1=s1+1;
        c2=s2+1;
        
        for(;c1<=e1;c1++){
            if(arr2[s2+1]==arr1[c1]){
                break;
            }
        }
        for(;c2<=e2;c2++){
            if(arr1[s1+1]==arr2[c2]){
                break;
            }
        }
        
        node.left= dfs(arr1,arr2,s1+1,c1-1,c2,e2);
        node.right = dfs(arr1,arr2,c1,e1,s2+1,c2-1);
        
        return node;
    }
    public Node constructBTree(int pre[], int preM[], int size)
    {
        // your code here
        return dfs(pre,preM,0,size-1,0,size-1);
    }
}
