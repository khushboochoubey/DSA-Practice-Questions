class Solution
{
    static int numOfWays(int n, int x){
        // code here
       long[] arr = new long[n];
        for (int i = 0; i < n; i++) {
            arr[i] = (long) Math.pow(i + 1, x);
        }
        int sum = n;
        int  mod =1000000007;
        long[][] dp = new long[n + 1][sum + 1];
        for (int i = 0; i <= n; i++)dp[i][0] = 1;
        for (int j = 1; j <= sum; j++)dp[0][j] = 0;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= sum; j++) {
                dp[i][j] = dp[i - 1][j] % mod;
                if (j >= arr[i - 1])
                    dp[i][j] = (dp[i][j] + dp[i - 1][j - (int) arr[i - 1]]) %mod;
            }
        }
        return (int) (dp[n][sum] % mod);
    }
    
}
